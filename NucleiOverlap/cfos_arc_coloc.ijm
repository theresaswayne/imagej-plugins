// cfos_arc_coloc.ijm
// IJ macro to measure object-based colocalization of nuclei
// Theresa Swayne, Columbia University, 2017
// input: two single-channel single-slice images, and corresponding ROIsets from cfos_analysis macro, in same directory
// output: custom table: # C1 cells, # C2 cells, # C1+C2 cells, % C1 cells with C2 label, % C2 cells with C1 label.
//    optional: label masks for each channel
// usage: Run the nuclear analysis first to get the ROI sets.  Have them in the same directory as the channel images. 
//        Then run the macro, and when prompted select the C1 image. They need to have names starting with C1 and C2 
// 		  as generated by the split_channels macro.


// SETUP

CELLMIN = 50 // microns^2
CELLMAX = 300 // microns^2

// make sure the correct channel is opened to begin with
channel = "0";
while (channel != "1") 
	{
	open();
	title = getTitle();
	channel = substring(title, 1, 2);
	if (channel != "1")
		{  
		Dialog.create("Input error");
		Dialog.addMessage("Please open a C1 image."); 
		Dialog.show();
		close();
		}
	}

path = getDirectory("image");
dotIndex = indexOf(title, ".");
basename = substring(title, 3, dotIndex); // omitting the channel name
roiname = "Coloc-"+ basename;

// print("basename is " + basename);

function makeMask(image, channel) 
	{
	// creates and saves a mask from a ROIset and image that are open
	// leaves the original image and mask open
	
	roiManager("deselect"); // select none 
	roiManager("Combine"); // if none are selected, all will be combined
	roiManager("Delete"); // delete individual rois
	roiManager("Add"); // the combined ROI so there is now only one in the list
	roiManager("Select", 0); // the combined roi
	run("Create Mask");
	roiManager("reset");

	maskName = "C"+channel+"-Mask-";
	selectWindow("Mask");
//	run("Divide...", "value=255"); // pixels will have values of 0 or 1
	rename(maskName);
	save(path+maskName+basename+".tif");
	return;
	}

	
// prepare masks for each channel

for (c = 1; c <= 2; c ++)
	{
	channel = d2s(c,0);
	if (!(isOpen("C"+channel+"-"+basename+".tif"))) // open the channel image
		{
		open(path + "C" + channel + "-" + basename + ".tif");
		}
		
	id = getImageID();
	
	roiManager("Open", path+"RoiSet_C" + channel + "-" + basename + ".zip"); // open the ROI set

	makeMask(id, channel);
	
	selectImage(id); // close the original image
	close();

	}

// define overlapping areas

imageCalculator("Multiply create","C1-Mask-","C2-Mask-");

// assuming the result is selected

rename("Overlap");
save(path+"Overlap-"+basename+".tif");
selectWindow("C1-Mask-");
close();

selectWindow("C2-Mask-");
close();

selectWindow("Overlap");
close();

// build a results table 
// open the image, analyze, add a line to the summary
// repeat for c1, c2, overlap
// read out the values and make a new summaru table
// format: image name, n cells, n cells colocalized with other label, % colocalized with other label

function AnalyzePartic(image)
	{
	// prints a particle summary for the specified image ID
	run("Analyze Particles...", "size=" + CELLMIN + "-" + CELLMAX + " exclude summarize");
	return;
	}

run("Clear Results");

open(path+"C1-Mask-"+basename+".tif");
id1 = getImageID();
AnalyzePartic(id1);

open(path+"C2-Mask-"+basename+".tif");
id2 = getImageID();
AnalyzePartic(id2);

open(path+"Overlap-"+basename+".tif");
idOverlap = getImageID();
AnalyzePartic(idOverlap);

selectWindow("Summary"); 
lines = split(getInfo(), "\n"); 
headings = split(lines[0], "\t"); 
C1Values = split(lines[1], "\t"); 
C2Values = split(lines[2], "\t"); 
OverlapValues = split(lines[3], "\t"); 

C1Name = C1Values[0];
C2Name = C2Values[0];
C1Count = parseInt(C1Values[1]);
C2Count = parseInt(C2Values[1]);
OverlapCount = parseInt(OverlapValues[1]);

C1withC2 = OverlapCount/C1Count;
// print("C1 coloc " + C1withC2);
C2withC1 = OverlapCount/C2Count;
// print("C2 coloc " + C2withC1);

run("New... ", "name=[Cell_Colocalization] type=Table"); 
print("[Cell_Colocalization]", "Filename\tChannel\tTotal Cells\tColocalized Cells\tFraction Colocalized\n");
print("[Cell_Colocalization]", C1Name+"\t1\t" + C1Count+ "\t"+ OverlapCount + "\t" + C1withC2);
print("[Cell_Colocalization]", C2Name+"\t2\t" + C2Count+ "\t"+ OverlapCount + "\t" + C2withC1);

// TODO: Why does it print 3 times?

// path = "/Users/confocal/Google Drive/Confocal Facility/User projects/Alberini brain image analysis/cfos-Arc/split channels/test/"
selectWindow("Cell_Colocalization");
saveAs("Text", path+"edited-summary.xls");
close();

